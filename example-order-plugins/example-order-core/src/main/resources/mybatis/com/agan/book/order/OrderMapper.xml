<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.agan.book.order.persistence.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.agan.book.order.domain.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="trade_id" property="tradeId" jdbcType="INTEGER" />
    <result column="trade_status" property="tradeStatus" jdbcType="BIT" />
    <result column="deleted" property="deleted" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, product_id, price, user_id, trade_id, trade_status, deleted, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
    
  </select>
  
  <select id="findOrderByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		select 
	    <include refid="Base_Column_List" />
	    from `order`
	    where user_id=#{userId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.agan.book.order.domain.Order" useGeneratedKeys="true" keyProperty="id">
    insert into `order` ( product_id, price, 
      user_id, trade_id, trade_status, 
      deleted, create_time, update_time
      )
    values (#{productId,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{tradeId,jdbcType=INTEGER}, #{tradeStatus,jdbcType=BIT}, 
      #{deleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.agan.book.order.domain.Order" >
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="tradeId != null" >
        trade_id,
      </if>
      <if test="tradeStatus != null" >
        trade_status,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeId != null" >
        #{tradeId,jdbcType=INTEGER},
      </if>
      <if test="tradeStatus != null" >
        #{tradeStatus,jdbcType=BIT},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.agan.book.order.domain.Order" >
    update `order`
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeId != null" >
        trade_id = #{tradeId,jdbcType=INTEGER},
      </if>
      <if test="tradeStatus != null" >
        trade_status = #{tradeStatus,jdbcType=BIT},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.agan.book.order.domain.Order" >
    update `order`
    set product_id = #{productId,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      trade_id = #{tradeId,jdbcType=INTEGER},
      trade_status = #{tradeStatus,jdbcType=BIT},
      deleted = #{deleted,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>